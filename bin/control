#!/bin/bash -eu

source $OPENSHIFT_CARTRIDGE_SDK_BASH

function pid {
  lsof -ti @$OPENSHIFT_HASKELL_IP:$OPENSHIFT_HASKELL_PORT -sTCP:listen
}

function start {
  if pid &>/dev/null; then
    warning "The server is already running."
  else
    timestamp >>$OPENSHIFT_HASKELL_LOG_DIR/stdout.log
    timestamp >>$OPENSHIFT_HASKELL_LOG_DIR/stderr.log
    server $OPENSHIFT_HASKELL_IP $OPENSHIFT_HASKELL_PORT >>$OPENSHIFT_HASKELL_LOG_DIR/stdout.log 2>>$OPENSHIFT_HASKELL_LOG_DIR/stderr.log &
  fi
}

function stop {
  if pid=$(pid); then
    kill $pid
    wait_for_stop $pid
    if pid &>/dev/null; then error "The server did not respond to the stop signal." 1; fi
  else
    warning "The server is not running, nothing to stop."
  fi
}

function timestamp {
  echo -e '\n'$(date)'\n'
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    [ $(pid) ]
    ;;
  tidy)
    echo "deleting logs ..."
    rm -rf $OPENSHIFT_HASKELL_LOG_DIR/*
    echo "deleting hackage cache ..."
    rm -rf $OPENSHIFT_HASKELL_DIR/cabal/packages/hackage.haskell.org/*/
    rm -rf $OPENSHIFT_HASKELL_DIR/cabal/packages/hackage.haskell.org/00-index.tar.gz
    rm -rf $OPENSHIFT_HASKELL_DIR/cabal/packages/hackage.haskell.org/build-reports.log
    echo "emptying working directory ..."
    rm -rf $OPENSHIFT_REPO_DIR/*
    ;;
  build)
    if marker_present force_clean_build; then
      echo "marker: force_clean_build ..."
      rm -rf $OPENSHIFT_DEPENDENCIES_DIR/*
      rm -rf $OPENSHIFT_HASKELL_DIR/cabal/lib
      rm -rf $OPENSHIFT_HASKELL_DIR/cabal/share
      rm -f $OPENSHIFT_HASKELL_DIR/cabal/world
      rm -rf $CABAL_PACKAGE_DB
      ghc-pkg init $CABAL_PACKAGE_DB
    fi
    if marker_present cabal_update; then
      echo "marker: cabal_update ..."
      cabal update
    fi
    cd $OPENSHIFT_REPO_DIR
    touch .timestamp
    if marker_present run_tests; then
      cabal install --enable-tests --only-dependencies
      echo "marker: run_tests ..."
      log=$OPENSHIFT_HASKELL_LOG_DIR/tests.log
      timestamp >>$log
      cabal test --log=$log
    fi
    cabal install
    if [ -e $OPENSHIFT_HASKELL_DIR/cabal/lib ]; then
      echo "stripping libraries ..."
      find $OPENSHIFT_HASKELL_DIR/cabal/lib -newer .timestamp -name '*.a' -exec strip --strip-unneeded {} +
    fi
    ;;
esac
