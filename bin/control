#!/bin/bash -eu

source $OPENSHIFT_CARTRIDGE_SDK_BASH

function pid {
  PID=$(oo-lists-ports |grep "$OPENSHIFT_HASKELL_IP:$OPENSHIFT_HASKELL_PORT" | awk '{ print $2 }')
  echo $PID
  [ -n "$PID" ]
}

function start {
  if pid &>/dev/null; then
    warning "The server is already running."
  else
    timestamp >>$OPENSHIFT_LOG_DIR/haskell-stdout.log
    timestamp >>$OPENSHIFT_LOG_DIR/haskell-stderr.log
    server $OPENSHIFT_HASKELL_IP $OPENSHIFT_HASKELL_PORT > >(logshifter -tag haskell-stdout) 2> >(logshifter -tag haskell-stderr) &
  fi
}

function stop {
  if pid=$(pid); then
    kill $pid
    wait_for_stop $pid
    if pid &>/dev/null; then error "The server did not respond to the stop signal." 1; fi
  else
    warning "The server is not running, nothing to stop."
  fi
}

function timestamp {
  echo -e '\n'$(date)'\n'
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    [ $(pid) ]
    ;;
  tidy)
    echo "deleting haskell logs ..."
    rm -rf $OPENSHIFT_LOG_DIR/haskell-*
    echo "deleting hackage cache ..."
    rm -rf $OPENSHIFT_HASKELL_DIR/cabal/packages/*
    echo "emptying working directory ..."
    rm -rf $OPENSHIFT_REPO_DIR/*
    rm -rf $OPENSHIFT_HASKELL_DIR/cabal/dist/*
    ;;
  pre-build)
    ln -s $OPENSHIFT_HASKELL_DIR/cabal/dist $OPENSHIFT_REPO_DIR
    ;;
  build)
    marker_present hot_deploy && exit
    if marker_present force_clean_build; then
      rm -rf $OPENSHIFT_HASKELL_DIR/cabal/dist/*
      ghc-pkg init $CABAL_PACKAGE_DB
    fi
    [ "$(ghc-pkg check --package-db=$CABAL_PACKAGE_DB 2>&1)" ] && (echo "rebuilding package cache"; ghc-pkg recache --package-db=$CABAL_PACKAGE_DB)
    if marker_present cabal_update || [ ! -d $OPENSHIFT_HASKELL_DIR/cabal/packages/hackage.haskell.org ]; then
      marker_present cabal_update && echo "marker: cabal_update ..."
      cabal update
    fi
    cd $OPENSHIFT_REPO_DIR
    touch .timestamp
    if marker_present run_tests; then
      cabal install --enable-tests --only-dependencies
      echo "marker: run_tests ..."
      timestamp >>$OPENSHIFT_LOG_DIR/haskell-tests.log
      cabal test --log=>(logshifter -tag haskell-tests)
    fi
    if marker_present cabal_flags; then
      flags=$(cat $OPENSHIFT_REPO_DIR/.openshift/markers/cabal_flags)
      echo "marker: cabal_flags: $flags"
      cabal install -f"$flags"
    else
      cabal install
    fi
    #post-process newly installed packages
    find $CABAL_PACKAGE_DB -newer .timestamp -name '*.conf' -exec sed -i "
#convert absolute paths in package db to relative
s|$OPENSHIFT_BUILD_DEPENDENCIES_DIR|\${pkgroot}|g
#remove references to non-existent documentation
s|haddock-interfaces: .*|haddock-interfaces:|
s|haddock-html: .*|haddock-html|" {} +
    ;;
esac
