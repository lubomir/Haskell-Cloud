#!/bin/bash -eu

#create app
url=`rhc app create test "http://www.accursoft.com/cartridges/dev.yml" --noprompt -s | sed -n 's/ *URL: *//p'`
#test template
curl -s $url | grep Welcome

cd test
#change the welcome message
sed -i 's/Welcome/Greetings/' Main.hs
#add a package
sed -i 's/process/process, stm/' server.cabal
#check that force_clean_build doesn't break anything
touch .openshift/markers/force_clean_build
#check that tidy doesn't break anything
rhc app tidy test

#test the changes
git add .openshift/markers/force_clean_build
git commit -a -m test
git push
curl -s $url | grep Greetings
git rm .openshift/markers/force_clean_build

#test cabal flags
cp Main.hs test.hs
sed -i 's/Greetings/Hello/' test.hs
echo "Flag A" >>server.cabal
sed -i 's/main-is: *Main.hs/if flag(a) {main-is:Main.hs} else {main-is:test.hs}/' server.cabal
echo "b" >.openshift/markers/cabal_flags
git add test.hs
git add .openshift/markers/cabal_flags
git commit -a -m test
git push
curl -s http://test-accursoft.rhcloud.com/ | grep Greetings
echo "-a" >>.openshift/markers/cabal_flags
git commit -a -m test
git push
curl -s http://test-accursoft.rhcloud.com/ | grep Hello
git rm .openshift/markers/cabal_flags
git commit -a -m test

#check run_tests
touch .openshift/markers/run_tests
git add .openshift/markers/run_tests
echo "main = return ()" >test.hs
echo "test-suite test
  type:exitcode-stdio-1.0
  main-is:test.hs
  build-depends:binding-core" >>server.cabal
git add test.hs
sed -i 's/Greetings/Hello/' Main.hs
git commit -a -m test
git push
curl -s http://test-accursoft.rhcloud.com/ | grep Hello

#clear up
rhc app delete test --confirm
cd ..
rm -rf test
