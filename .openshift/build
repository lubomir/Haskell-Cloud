#!/bin/bash -eu

#local paths
export OPENSHIFT_HASKELL_DIR=`pwd`
export PATH=`pwd`/usr/bin:$PATH
openshift=`pwd`/.openshift
PARTS_BIN=$OPENSHIFT_DATA_DIR/haskell

#use existing gold linker or build from source
if ! [ -e $PARTS_BIN/ld ]; then
  cd .openshift
  #we need bison
  if ! [ -e $PARTS_BIN/bin/bison ]; then
    echo "* Downloading bison ..."
    curl -Ls http://ftpmirror.gnu.org/bison/`curl -s http://ftp.gnu.org/gnu/bison/ | grep -o bison-[0-9.]*.tar.xz | tail -1` | tar xJ
    cd bison-*
    echo "* Building bison ..."
    ./configure --prefix=$PARTS_BIN
    make
    make install
    strip $PARTS_BIN/bin/bison $PARTS_BIN/lib/liby.a
    cd ..
  fi
  export PATH=$PATH:$PARTS_BIN/bin
  echo "* Downloading bin-utils ..."
  curl -Ls http://ftpmirror.gnu.org/binutils/`curl -s http://ftp.gnu.org/gnu/binutils/ | grep -o binutils-[0-9.]*.tar.bz2 | tail -1` | tar xj
  cd binutils-*
  echo "* Building bin-utils ..."
  ./configure
  make
  cd gold
  echo "* Building gold ..."
  ./configure --prefix=$openshift
  make
  make install
  cd ../../..
  strip .openshift/bin/ld.gold
  mv .openshift/bin/ld.gold $PARTS_BIN/ld
fi
cp $PARTS_BIN/ld usr/bin/

#initialise the global package db
ghc-pkg recache

#cabal configuration
sed -i "s|!openshift!|$openshift|g" $openshift/config
sed -i "s|!OPENSHIFT_HASKELL_DIR!|$OPENSHIFT_HASKELL_DIR|g" $openshift/config
sed -i "s|!packages!|$PARTS_BIN/packages|g" $openshift/config
export CABAL_CONFIG=$openshift/config

#use existing cabal or build from hackage
if ! [ -e $PARTS_BIN/cabal ]; then
  cd .openshift
  echo "* Downloading cabal-install ..."
  curl -s http://hackage.haskell.org`curl -s http://hackage.haskell.org/package/cabal-install | grep -o '/package/cabal-install-[0-9.]*/cabal-install-[0-9.]*.tar.gz'` | tar xz
  cd cabal-install-*
  echo "* Building cabal-install ..."
  #put the packages installed by cabal-install in a temporary location, they might not be the best ones to use with the cartridge frameworks
  ghc-pkg init $openshift/ghc
  export EXTRA_CONFIGURE_OPTS=--package-db=$openshift/ghc
  sed -i "s|\${HOME}/.cabal|$openshift/cabal|g" bootstrap.sh
  sed -i "s|\${CURL} -L|\${CURL} -s -L|g" bootstrap.sh
  ./bootstrap.sh
  mv $openshift/cabal/bin/cabal $PARTS_BIN
  cd ../..
fi
cp $PARTS_BIN/cabal usr/bin/

#install packages
echo "* Cabal update ..."
cabal update
touch .openshift/timestamp

echo "* Installing packages ..."
case $build in
  network)
    cabal install --global network
    provides="network"
    ;;
  mflow)
    cabal install --global MFlow
    provides="MFlow"
    ;;
  yesod)
    cabal install --global alex
    cabal install --global yesod-platform happy esqueleto
    provides="yesod-platform-\d|^esqueleto"
    ;;
  snap)
    cabal install --global snap
    provides="snap"
    ;;
  scotty)
    cabal install --global scotty
    provides="scotty"
    ;;
  happstack)
    cabal install --global happy
    cabal install --global hsx2hs
    cabal install --global happstack-foundation
    provides="happstack-foundation"
    ;;
  *)
    echo Unknown build option $build
    exit 1
esac

#post-process package db
ghc=`pwd`/usr/lib
packages=$ghc/ghc-7.6.3/package.conf.d
find $packages -newer .openshift/timestamp -name '*.conf' -exec sed -i "
#convert absolute paths in package db to relative
s|$ghc|\$topdir/..|g
#remove references to non-existent documentation
s|haddock-interfaces: .*|haddock-interfaces:|
s|haddock-html: .*|haddock-html|" {} +
rm $packages/package.cache

echo "* Stripping packages ..."
find $ghc -newer .openshift/timestamp -name '*.a' -exec strip --strip-unneeded {} +

echo "* Preparing the manifest and readme ..."
echo "  - cabal-install-`cabal --numeric-version`" >>metadata/manifest.yml
ls usr/lib -1 | grep -P "^$provides-\d" | sed 's/^/  - /' >>metadata/manifest.yml
cat .openshift/manifests/$build.yml >>metadata/manifest.yml
sed -i "s/{GHC-version}/7.6.3/g" metadata/manifest.yml

sed -i "s|template/||g" README.md
mv README.md template
